// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'order_detail_response.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$OrderDetailResponseImpl _$$OrderDetailResponseImplFromJson(
  Map<String, dynamic> json,
) => _$OrderDetailResponseImpl(
  prodOrderId: (json['prod_order_id'] as num?)?.toInt(),
  referenceNo: json['reference_no'] as String?,
  orderToken: json['order_token'] as String?,
  orderStatusName: json['order_status_name'] as String?,
  deliveryAgentId: json['delivery_agent_id'] as String?,
  rounding: (json['rounding'] as num?)?.toInt(),
  parcelCharge: (json['parcel_charge'] as num?)?.toDouble(),
  tableDetails: json['table_details'] as List<dynamic>?,
  custFeedbackExist: (json['cust_feedback_exist'] as num?)?.toInt(),
  customerFeedbacks: json['customer_feedbacks'] as String?,
  tenantId: (json['tenant_id'] as num?)?.toInt(),
  deliveryAgentName: json['delivery_agent_name'] as String?,
  deliveryBoyPhone: (json['delivery_boy_phone'] as num?)?.toInt(),
  deliveryPartnerId: (json['delivery_partner_id'] as num?)?.toInt(),
  deliveryPartnerName: json['delivery_partner_name'] as String?,
  deliveryAgentStatusId: (json['delivery_agent_status_id'] as num?)?.toInt(),
  delPartnerOrderNo: json['del_partner_order_no'] as String?,
  orderStatusArabicName: json['order_status_arabic_name'] as String?,
  payReferenceNumber: json['pay_reference_number'] as String?,
  orderOptionId: (json['order_option_id'] as num?)?.toInt(),
  delPrefDate: json['del_pref_date'] as String?,
  delPrefTime: json['del_pref_time'] as String?,
  pickupDate: json['pickup_date'] as String?,
  pickupTime: json['pickup_time'] as String?,
  orderOptionDate: json['order_option_date'] as String?,
  orderOption: json['order_option'] as String?,
  paymentMethodId: (json['payment_method_id'] as num?)?.toInt(),
  payMethodName: json['pay_method_name'] as String?,
  payMethodArabic: json['pay_method_arabic'] as String?,
  paymentStatusId: (json['payment_status_id'] as num?)?.toInt(),
  paymentStatusName: json['payment_status_name'] as String?,
  paymentStatusArabic: json['payment_status_arabic'] as String?,
  storeId: (json['store_id'] as num?)?.toInt(),
  spotDiscountPercentage: parseNumberAsDouble(json['spot_discount_percentage']),
  spotDiscountAmt: (json['spot_discount_amt'] as num?)?.toInt(),
  orderOptionName: json['order_option_name'] as String?,
  orderStatusId: (json['order_status_id'] as num?)?.toInt(),
  invoiceNum: json['invoice_num'] as String?,
  orderDate: json['order_date'] as String?,
  mobOrderDate: json['mob_order_date'] as String?,
  mobOrderTime: json['mob_order_time'] as String?,
  mobODate: json['mob_o_date'] as String?,
  netAmount: (json['net_amount'] as num?)?.toDouble(),
  amountInCash: (json['amount_in_cash'] as num?)?.toInt(),
  timeCash: json['time_cash'] as String?,
  amountByCard: (json['amount_by_card'] as num?)?.toInt(),
  timeCard: json['time_card'] as String?,
  netAmountWalletMoney: (json['net_amount_wallet_money'] as num?)?.toInt(),
  netAmountWalletPoints: (json['net_amount_wallet_points'] as num?)?.toInt(),
  stateName: json['state_name'] as String?,
  countryName: json['country_name'] as String?,
  grandTotal: (json['grand_total'] as num?)?.toDouble(),
  accountId: (json['account_id'] as num?)?.toInt(),
  loyaltyNo: json['loyalty_no'] as String?,
  custId: (json['cust_id'] as num?)?.toInt(),
  taxableAmount: (json['taxable_amount'] as num?)?.toDouble(),
  isTaxable: (json['is_taxable'] as num?)?.toInt(),
  isTaxInclusive: (json['is_tax_inclusive'] as num?)?.toInt(),
  taxId: (json['tax_id'] as num?)?.toInt(),
  trn: json['TRN'] as String?,
  nonTaxableAmt: (json['non_taxable_amt'] as num?)?.toInt(),
  orderDiscPercentage: (json['order_disc_percentage'] as num?)?.toInt(),
  arabicNameSettings: (json['ArabicNameSettings'] as num?)?.toInt(),
  taxSettings: (json['taxSettings'] as num?)?.toInt(),
  taxName: json['tax_name'] as String?,
  orderTaxPercentage: (json['order_tax_percentage'] as num?)?.toInt(),
  orderDiscAmount: (json['order_disc_amount'] as num?)?.toInt(),
  taxAmount: (json['tax_amount'] as num?)?.toDouble(),
  shippingCharge: (json['shipping_charge'] as num?)?.toInt(),
  weightScale: (json['weight_scale'] as num?)?.toInt(),
  cancelItemAmount: (json['cancel_item_amount'] as num?)?.toInt(),
  substituteExist: (json['substitute_exist'] as num?)?.toInt(),
  subNotificationStatusId: (json['sub_notification_status_id'] as num?)
      ?.toInt(),
  subNotificationStatusName: json['sub_notification_status_name'] as String?,
  surgeAmt: (json['surge_amt'] as num?)?.toInt(),
  orderSurges: json['order_surges'] as List<dynamic>?,
  supplierId: (json['supplier_id'] as num?)?.toInt(),
  waiterName: json['waiter_name'] as String?,
  cashierName: json['cashier_name'] as String?,
  kioskName: json['kiosk_name'] as String?,
  vehicleNo: json['vehicle_no'] as String?,
  deviceSerialNo: json['device_serial_no'] as String?,
  billNo: json['bill_no'] as String?,
  billCustName: json['bill_cust_name'] as String?,
  billFlatNo: json['bill_flat_no'] as String?,
  billDoorNo: json['bill_door_no'] as String?,
  billStreetNo: json['bill_street_no'] as String?,
  billBuildingNo: json['bill_building_no'] as String?,
  billZone: json['bill_zone'] as String?,
  billLocation: json['bill_location'] as String?,
  billCity: json['bill_city'] as String?,
  billLandmark: json['bill_landmark'] as String?,
  billArea: json['bill_area'] as String?,
  billPobox: json['bill_pobox'] as String?,
  billCountryId: (json['bill_country_id'] as num?)?.toInt(),
  billStateId: (json['bill_state_id'] as num?)?.toInt(),
  billEmail: json['bill_email'] as String?,
  billMobile: json['bill_mobile'] as String?,
  billPhone: json['bill_phone'] as String?,
  shipLocation: json['ship_location'] as String?,
  shipCustName: json['ship_cust_name'] as String?,
  shipCity: json['ship_city'] as String?,
  shipLandmark: json['ship_landmark'] as String?,
  shipStateId: (json['ship_state_id'] as num?)?.toInt(),
  shipArea: json['ship_area'] as String?,
  shipPobox: json['ship_pobox'] as String?,
  shipCountryId: (json['ship_country_id'] as num?)?.toInt(),
  shipEmail: json['ship_email'] as String?,
  shipMobile: json['ship_mobile'] as String?,
  shipPhone: json['ship_phone'] as String?,
  shipStreetNo: json['ship_street_no'] as String?,
  shipZone: json['ship_zone'] as String?,
  shipFlatNo: json['ship_flat_no'] as String?,
  shipBuildingNo: json['ship_building_no'] as String?,
  shipDoorNo: json['ship_door_no'] as String?,
  custShipAddressId: (json['cust_ship_address_id'] as num?)?.toInt(),
  orderNote: json['order_note'] as String?,
  createdDate: json['created_date'] as String?,
  updatedDate: json['updated_date'] == null
      ? null
      : DateTime.parse(json['updated_date'] as String),
  currencyCode: json['currency_code'] as String?,
  delMethodId: (json['del_method_id'] as num?)?.toInt(),
  delMethodName: json['del_method_name'] as String?,
  pickupLocationId: (json['pickup_location_id'] as num?)?.toInt(),
  pickupLocationName: json['pickup_location_name'] as String?,
  pickupLocationAddress: json['pickup_location_address'] as String?,
  areaId: (json['area_id'] as num?)?.toInt(),
  zip: json['zip'] as String?,
  countryId: (json['country_id'] as num?)?.toInt(),
  stateId: (json['state_id'] as num?)?.toInt(),
  phoneNo: (json['phone_no'] as num?)?.toInt(),
  emailId: json['email_id'] as String?,
  pickupCountryName: json['pickup_country_name'] as String?,
  pickupStateName: json['pickup_state_name'] as String?,
  pickupAreaName: json['pickup_area_name'] as String?,
  orderRejectReason: json['order_reject_reason'] as String?,
  presentmentCurrencyId: (json['presentment_currency_id'] as num?)?.toInt(),
  exchangeMultiplier: (json['exchange_multiplier'] as num?)?.toInt(),
  presentmentCurrencyPrecision: (json['presentment_currency_precision'] as num?)
      ?.toInt(),
  presentmentCurrencyCode: json['presentment_currency_code'] as String?,
  referenceTypeId: (json['reference_type_id'] as num?)?.toInt(),
  orderStatuses: (json['order_statuses'] as List<dynamic>?)
      ?.map((e) => OrderStatus.fromJson(e as Map<String, dynamic>))
      .toList(),
  stores: (json['stores'] as List<dynamic>?)
      ?.map((e) => Store.fromJson(e as Map<String, dynamic>))
      .toList(),
  productOrderItem: (json['product_order_item'] as List<dynamic>?)
      ?.map((e) => ProductOrderItem.fromJson(e as Map<String, dynamic>))
      .toList(),
  walletEnabled: (json['wallet_enabled'] as num?)?.toInt(),
  rewardPointsEnabled: (json['reward_points_enabled'] as num?)?.toInt(),
  weighingScaleEnabled: (json['weighing_scale_enabled'] as num?)?.toInt(),
  parcelChargeEnabled: (json['parcel_charge_enabled'] as num?)?.toInt(),
);

Map<String, dynamic> _$$OrderDetailResponseImplToJson(
  _$OrderDetailResponseImpl instance,
) => <String, dynamic>{
  'prod_order_id': instance.prodOrderId,
  'reference_no': instance.referenceNo,
  'order_token': instance.orderToken,
  'order_status_name': instance.orderStatusName,
  'delivery_agent_id': instance.deliveryAgentId,
  'rounding': instance.rounding,
  'parcel_charge': instance.parcelCharge,
  'table_details': instance.tableDetails,
  'cust_feedback_exist': instance.custFeedbackExist,
  'customer_feedbacks': instance.customerFeedbacks,
  'tenant_id': instance.tenantId,
  'delivery_agent_name': instance.deliveryAgentName,
  'delivery_boy_phone': instance.deliveryBoyPhone,
  'delivery_partner_id': instance.deliveryPartnerId,
  'delivery_partner_name': instance.deliveryPartnerName,
  'delivery_agent_status_id': instance.deliveryAgentStatusId,
  'del_partner_order_no': instance.delPartnerOrderNo,
  'order_status_arabic_name': instance.orderStatusArabicName,
  'pay_reference_number': instance.payReferenceNumber,
  'order_option_id': instance.orderOptionId,
  'del_pref_date': instance.delPrefDate,
  'del_pref_time': instance.delPrefTime,
  'pickup_date': instance.pickupDate,
  'pickup_time': instance.pickupTime,
  'order_option_date': instance.orderOptionDate,
  'order_option': instance.orderOption,
  'payment_method_id': instance.paymentMethodId,
  'pay_method_name': instance.payMethodName,
  'pay_method_arabic': instance.payMethodArabic,
  'payment_status_id': instance.paymentStatusId,
  'payment_status_name': instance.paymentStatusName,
  'payment_status_arabic': instance.paymentStatusArabic,
  'store_id': instance.storeId,
  'spot_discount_percentage': instance.spotDiscountPercentage,
  'spot_discount_amt': instance.spotDiscountAmt,
  'order_option_name': instance.orderOptionName,
  'order_status_id': instance.orderStatusId,
  'invoice_num': instance.invoiceNum,
  'order_date': instance.orderDate,
  'mob_order_date': instance.mobOrderDate,
  'mob_order_time': instance.mobOrderTime,
  'mob_o_date': instance.mobODate,
  'net_amount': instance.netAmount,
  'amount_in_cash': instance.amountInCash,
  'time_cash': instance.timeCash,
  'amount_by_card': instance.amountByCard,
  'time_card': instance.timeCard,
  'net_amount_wallet_money': instance.netAmountWalletMoney,
  'net_amount_wallet_points': instance.netAmountWalletPoints,
  'state_name': instance.stateName,
  'country_name': instance.countryName,
  'grand_total': instance.grandTotal,
  'account_id': instance.accountId,
  'loyalty_no': instance.loyaltyNo,
  'cust_id': instance.custId,
  'taxable_amount': instance.taxableAmount,
  'is_taxable': instance.isTaxable,
  'is_tax_inclusive': instance.isTaxInclusive,
  'tax_id': instance.taxId,
  'TRN': instance.trn,
  'non_taxable_amt': instance.nonTaxableAmt,
  'order_disc_percentage': instance.orderDiscPercentage,
  'ArabicNameSettings': instance.arabicNameSettings,
  'taxSettings': instance.taxSettings,
  'tax_name': instance.taxName,
  'order_tax_percentage': instance.orderTaxPercentage,
  'order_disc_amount': instance.orderDiscAmount,
  'tax_amount': instance.taxAmount,
  'shipping_charge': instance.shippingCharge,
  'weight_scale': instance.weightScale,
  'cancel_item_amount': instance.cancelItemAmount,
  'substitute_exist': instance.substituteExist,
  'sub_notification_status_id': instance.subNotificationStatusId,
  'sub_notification_status_name': instance.subNotificationStatusName,
  'surge_amt': instance.surgeAmt,
  'order_surges': instance.orderSurges,
  'supplier_id': instance.supplierId,
  'waiter_name': instance.waiterName,
  'cashier_name': instance.cashierName,
  'kiosk_name': instance.kioskName,
  'vehicle_no': instance.vehicleNo,
  'device_serial_no': instance.deviceSerialNo,
  'bill_no': instance.billNo,
  'bill_cust_name': instance.billCustName,
  'bill_flat_no': instance.billFlatNo,
  'bill_door_no': instance.billDoorNo,
  'bill_street_no': instance.billStreetNo,
  'bill_building_no': instance.billBuildingNo,
  'bill_zone': instance.billZone,
  'bill_location': instance.billLocation,
  'bill_city': instance.billCity,
  'bill_landmark': instance.billLandmark,
  'bill_area': instance.billArea,
  'bill_pobox': instance.billPobox,
  'bill_country_id': instance.billCountryId,
  'bill_state_id': instance.billStateId,
  'bill_email': instance.billEmail,
  'bill_mobile': instance.billMobile,
  'bill_phone': instance.billPhone,
  'ship_location': instance.shipLocation,
  'ship_cust_name': instance.shipCustName,
  'ship_city': instance.shipCity,
  'ship_landmark': instance.shipLandmark,
  'ship_state_id': instance.shipStateId,
  'ship_area': instance.shipArea,
  'ship_pobox': instance.shipPobox,
  'ship_country_id': instance.shipCountryId,
  'ship_email': instance.shipEmail,
  'ship_mobile': instance.shipMobile,
  'ship_phone': instance.shipPhone,
  'ship_street_no': instance.shipStreetNo,
  'ship_zone': instance.shipZone,
  'ship_flat_no': instance.shipFlatNo,
  'ship_building_no': instance.shipBuildingNo,
  'ship_door_no': instance.shipDoorNo,
  'cust_ship_address_id': instance.custShipAddressId,
  'order_note': instance.orderNote,
  'created_date': instance.createdDate,
  'updated_date': instance.updatedDate?.toIso8601String(),
  'currency_code': instance.currencyCode,
  'del_method_id': instance.delMethodId,
  'del_method_name': instance.delMethodName,
  'pickup_location_id': instance.pickupLocationId,
  'pickup_location_name': instance.pickupLocationName,
  'pickup_location_address': instance.pickupLocationAddress,
  'area_id': instance.areaId,
  'zip': instance.zip,
  'country_id': instance.countryId,
  'state_id': instance.stateId,
  'phone_no': instance.phoneNo,
  'email_id': instance.emailId,
  'pickup_country_name': instance.pickupCountryName,
  'pickup_state_name': instance.pickupStateName,
  'pickup_area_name': instance.pickupAreaName,
  'order_reject_reason': instance.orderRejectReason,
  'presentment_currency_id': instance.presentmentCurrencyId,
  'exchange_multiplier': instance.exchangeMultiplier,
  'presentment_currency_precision': instance.presentmentCurrencyPrecision,
  'presentment_currency_code': instance.presentmentCurrencyCode,
  'reference_type_id': instance.referenceTypeId,
  'order_statuses': instance.orderStatuses,
  'stores': instance.stores,
  'product_order_item': instance.productOrderItem,
  'wallet_enabled': instance.walletEnabled,
  'reward_points_enabled': instance.rewardPointsEnabled,
  'weighing_scale_enabled': instance.weighingScaleEnabled,
  'parcel_charge_enabled': instance.parcelChargeEnabled,
};

_$OrderStatusImpl _$$OrderStatusImplFromJson(Map<String, dynamic> json) =>
    _$OrderStatusImpl(
      orderStatusId: (json['order_status_id'] as num?)?.toInt(),
      orderStatusName: json['order_status_name'] as String?,
      orderStatusArabicName: json['order_status_arabic_name'] as String?,
    );

Map<String, dynamic> _$$OrderStatusImplToJson(_$OrderStatusImpl instance) =>
    <String, dynamic>{
      'order_status_id': instance.orderStatusId,
      'order_status_name': instance.orderStatusName,
      'order_status_arabic_name': instance.orderStatusArabicName,
    };

_$ProductOrderItemImpl _$$ProductOrderItemImplFromJson(
  Map<String, dynamic> json,
) => _$ProductOrderItemImpl(
  productId: (json['product_id'] as num?)?.toInt(),
  productName: json['product_name'] as String?,
  orderItemId: (json['order_item_id'] as num?)?.toInt(),
  productCode: json['product_code'] as String?,
  productSlug: json['product_slug'] as String?,
  productBarcode: json['product_barcode'] as String?,
  productDesc: json['product_desc'] as String?,
  productArabicName: json['product_arabic_name'] as String?,
  storeId: (json['store_id'] as num?)?.toInt(),
  subNotificationStatusId: (json['sub_notification_status_id'] as num?)
      ?.toInt(),
  subNotificationStatusName: json['sub_notification_status_name'] as String?,
  storeProductId: (json['store_product_id'] as num?)?.toInt(),
  storeListingId: (json['store_listing_id'] as num?)?.toInt(),
  unitId: (json['unit_id'] as num?)?.toInt(),
  unitName: json['unit_name'] as String?,
  unitArabicName: json['unit_arabic_name'] as String?,
  taxId: (json['tax_id'] as num?)?.toInt(),
  itemsubstitute: json['itemsubstitute'] as List<dynamic>?,
  offerPrice: (json['offer_price'] as num?)?.toInt(),
  productPrice: (json['product_price'] as num?)?.toDouble(),
  orderItemPurchasePrice: (json['order_item_purchase_price'] as num?)?.toInt(),
  orderItemPrice: (json['order_item_price'] as num?)?.toDouble(),
  orderItemOfferPrice: (json['order_item_offer_price'] as num?)?.toInt(),
  orderItemDisc: (json['order_item_disc'] as num?)?.toInt(),
  orderItemNetAmt: (json['order_item_net_amt'] as num?)?.toInt(),
  orderItemNote: json['order_item_note'] as String?,
  orderItemTotal: (json['order_item_total'] as num?)?.toInt(),
  delMethodId: (json['del_method_id'] as num?)?.toInt(),
  delMethodCharge: json['del_method_charge'] as String?,
  printed: (json['printed'] as num?)?.toInt(),
  delMethodName: json['del_method_name'] as String?,
  mainCategoryId: (json['main_category_id'] as num?)?.toInt(),
  categoryName: json['category_name'] as String?,
  isFree: (json['is_free'] as num?)?.toInt(),
  servicePrice: (json['service_price'] as num?)?.toInt(),
  orderStatusId: (json['order_status_id'] as num?)?.toInt(),
  orderStatusName: json['order_status_name'] as String?,
  orderItemStatusHistory: json['order_item_status_history'] as List<dynamic>?,
  orderItemQty: (json['order_item_qty'] as num?)?.toInt(),
  couponId: (json['coupon_id'] as num?)?.toInt(),
  shippingCharge: (json['shipping_charge'] as num?)?.toInt(),
  isTaxable: (json['is_taxable'] as num?)?.toInt(),
  isTaxInclusive: (json['is_tax_inclusive'] as num?)?.toInt(),
  taxAmt: json['tax_amt'],
  orderTaxPercentage: json['order_tax_percentage'],
  minOrderQty: (json['min_order_qty'] as num?)?.toInt(),
  productQty: (json['product_qty'] as num?)?.toInt(),
  productTaxAmt: (json['product_tax_amt'] as num?)?.toInt(),
  productTaxPercentage: (json['product_tax_percentage'] as num?)?.toInt(),
  productFeatured: (json['product_featured'] as num?)?.toInt(),
  productShortDescription: json['product_short_description'] as String?,
  prodShipCharge: (json['prod_ship_charge'] as num?)?.toInt(),
  itemsPerPack: (json['items_per_pack'] as num?)?.toInt(),
  volume: (json['volume'] as num?)?.toInt(),
  productSku: json['product_sku'] as String?,
  prodPurchaseLimit: (json['prod_purchase_limit'] as num?)?.toInt(),
  kotId: (json['kot_id'] as num?)?.toInt(),
  kotName: json['kot_name'] as String?,
  prodMenuOrder: (json['prod_menu_order'] as num?)?.toInt(),
  prodHeight: (json['prod_height'] as num?)?.toInt(),
  prodWidth: (json['prod_width'] as num?)?.toInt(),
  prodLength: (json['prod_length'] as num?)?.toInt(),
  prodWeight: (json['prod_weight'] as num?)?.toInt(),
  reorderQty: (json['reorder_qty'] as num?)?.toInt(),
  prodSeoTitle: json['prod_seo_title'] as String?,
  prodSeoKeyword: json['prod_seo_keyword'] as String?,
  productSeoUrl: json['product_seo_url'] as String?,
  prodSeoDesc: json['prod_seo_desc'] as String?,
  maintainStock: (json['maintain_stock'] as num?)?.toInt(),
  ignoreDiscount: (json['ignore_discount'] as num?)?.toInt(),
  isVariant: (json['is_variant'] as num?)?.toInt(),
  isCancelled: (json['is_cancelled'] as num?)?.toInt(),
  cancelledReasonDate: json['cancelled_reason_date'] as String?,
  cancelledReasonId: (json['cancelled_reason_id'] as num?)?.toInt(),
  cancelledReason: json['cancelled_reason'] as String?,
  images: json['images'] as List<dynamic>?,
  variants: (json['variants'] as List<dynamic>?)
      ?.map((e) => Variant.fromJson(e as Map<String, dynamic>))
      .toList(),
  serviceId: json['service_id'] as List<dynamic>?,
  services: json['services'] as List<dynamic>?,
  serviceGroups: json['service_groups'] as List<dynamic>?,
  productCategories: (json['product_categories'] as List<dynamic>?)
      ?.map((e) => ProductCategory.fromJson(e as Map<String, dynamic>))
      .toList(),
  isShopOnly: (json['is_shop_only'] as num?)?.toInt(),
  addToCart: json['add_to_cart'] as bool?,
  wishlisted: json['wishlisted'] as bool?,
  quantity: (json['quantity'] as num?)?.toInt(),
  defaultQuantity: (json['default_quantity'] as num?)?.toInt(),
  prodVarId: (json['prod_var_id'] as num?)?.toInt(),
  prodVarCode: parseInt(json['prod_var_code']),
  isOutOfStock: (json['is_out_of_stock'] as num?)?.toInt(),
  changePrice: (json['change_price'] as num?)?.toInt(),
  returnableInfo: json['returnable_info'] == null
      ? null
      : ReturnableInfo.fromJson(
          json['returnable_info'] as Map<String, dynamic>,
        ),
  isPreOrder: (json['is_pre_order'] as num?)?.toInt(),
  preOrderFee: (json['pre_order_fee'] as num?)?.toInt(),
  releaseTime: (json['release_time'] as num?)?.toInt(),
  preOrderChargingOptionId: (json['pre_order_charging_option_id'] as num?)
      ?.toInt(),
  takeawayAddonPrice: (json['takeaway_addon_price'] as num?)?.toInt(),
  parcelCharge: (json['parcel_charge'] as num?)?.toInt(),
);

Map<String, dynamic> _$$ProductOrderItemImplToJson(
  _$ProductOrderItemImpl instance,
) => <String, dynamic>{
  'product_id': instance.productId,
  'product_name': instance.productName,
  'order_item_id': instance.orderItemId,
  'product_code': instance.productCode,
  'product_slug': instance.productSlug,
  'product_barcode': instance.productBarcode,
  'product_desc': instance.productDesc,
  'product_arabic_name': instance.productArabicName,
  'store_id': instance.storeId,
  'sub_notification_status_id': instance.subNotificationStatusId,
  'sub_notification_status_name': instance.subNotificationStatusName,
  'store_product_id': instance.storeProductId,
  'store_listing_id': instance.storeListingId,
  'unit_id': instance.unitId,
  'unit_name': instance.unitName,
  'unit_arabic_name': instance.unitArabicName,
  'tax_id': instance.taxId,
  'itemsubstitute': instance.itemsubstitute,
  'offer_price': instance.offerPrice,
  'product_price': instance.productPrice,
  'order_item_purchase_price': instance.orderItemPurchasePrice,
  'order_item_price': instance.orderItemPrice,
  'order_item_offer_price': instance.orderItemOfferPrice,
  'order_item_disc': instance.orderItemDisc,
  'order_item_net_amt': instance.orderItemNetAmt,
  'order_item_note': instance.orderItemNote,
  'order_item_total': instance.orderItemTotal,
  'del_method_id': instance.delMethodId,
  'del_method_charge': instance.delMethodCharge,
  'printed': instance.printed,
  'del_method_name': instance.delMethodName,
  'main_category_id': instance.mainCategoryId,
  'category_name': instance.categoryName,
  'is_free': instance.isFree,
  'service_price': instance.servicePrice,
  'order_status_id': instance.orderStatusId,
  'order_status_name': instance.orderStatusName,
  'order_item_status_history': instance.orderItemStatusHistory,
  'order_item_qty': instance.orderItemQty,
  'coupon_id': instance.couponId,
  'shipping_charge': instance.shippingCharge,
  'is_taxable': instance.isTaxable,
  'is_tax_inclusive': instance.isTaxInclusive,
  'tax_amt': instance.taxAmt,
  'order_tax_percentage': instance.orderTaxPercentage,
  'min_order_qty': instance.minOrderQty,
  'product_qty': instance.productQty,
  'product_tax_amt': instance.productTaxAmt,
  'product_tax_percentage': instance.productTaxPercentage,
  'product_featured': instance.productFeatured,
  'product_short_description': instance.productShortDescription,
  'prod_ship_charge': instance.prodShipCharge,
  'items_per_pack': instance.itemsPerPack,
  'volume': instance.volume,
  'product_sku': instance.productSku,
  'prod_purchase_limit': instance.prodPurchaseLimit,
  'kot_id': instance.kotId,
  'kot_name': instance.kotName,
  'prod_menu_order': instance.prodMenuOrder,
  'prod_height': instance.prodHeight,
  'prod_width': instance.prodWidth,
  'prod_length': instance.prodLength,
  'prod_weight': instance.prodWeight,
  'reorder_qty': instance.reorderQty,
  'prod_seo_title': instance.prodSeoTitle,
  'prod_seo_keyword': instance.prodSeoKeyword,
  'product_seo_url': instance.productSeoUrl,
  'prod_seo_desc': instance.prodSeoDesc,
  'maintain_stock': instance.maintainStock,
  'ignore_discount': instance.ignoreDiscount,
  'is_variant': instance.isVariant,
  'is_cancelled': instance.isCancelled,
  'cancelled_reason_date': instance.cancelledReasonDate,
  'cancelled_reason_id': instance.cancelledReasonId,
  'cancelled_reason': instance.cancelledReason,
  'images': instance.images,
  'variants': instance.variants,
  'service_id': instance.serviceId,
  'services': instance.services,
  'service_groups': instance.serviceGroups,
  'product_categories': instance.productCategories,
  'is_shop_only': instance.isShopOnly,
  'add_to_cart': instance.addToCart,
  'wishlisted': instance.wishlisted,
  'quantity': instance.quantity,
  'default_quantity': instance.defaultQuantity,
  'prod_var_id': instance.prodVarId,
  'prod_var_code': instance.prodVarCode,
  'is_out_of_stock': instance.isOutOfStock,
  'change_price': instance.changePrice,
  'returnable_info': instance.returnableInfo,
  'is_pre_order': instance.isPreOrder,
  'pre_order_fee': instance.preOrderFee,
  'release_time': instance.releaseTime,
  'pre_order_charging_option_id': instance.preOrderChargingOptionId,
  'takeaway_addon_price': instance.takeawayAddonPrice,
  'parcel_charge': instance.parcelCharge,
};

_$ProductCategoryImpl _$$ProductCategoryImplFromJson(
  Map<String, dynamic> json,
) => _$ProductCategoryImpl(
  productCategoryId: (json['product_category_id'] as num?)?.toInt(),
  productId: (json['product_id'] as num?)?.toInt(),
  categoryId: (json['category_id'] as num?)?.toInt(),
  categoryName: json['category_name'] as String?,
  categorySlug: json['category_slug'] as String?,
  categoryArabicName: json['category_arabic_name'] as String?,
);

Map<String, dynamic> _$$ProductCategoryImplToJson(
  _$ProductCategoryImpl instance,
) => <String, dynamic>{
  'product_category_id': instance.productCategoryId,
  'product_id': instance.productId,
  'category_id': instance.categoryId,
  'category_name': instance.categoryName,
  'category_slug': instance.categorySlug,
  'category_arabic_name': instance.categoryArabicName,
};

_$ReturnableInfoImpl _$$ReturnableInfoImplFromJson(Map<String, dynamic> json) =>
    _$ReturnableInfoImpl(
      returnablePeriod: (json['returnable_period'] as num?)?.toInt(),
      returnableExpired: (json['returnable_expired'] as num?)?.toInt(),
      totalReturnableQty: (json['total_returnable_qty'] as num?)?.toInt(),
      totalReturnedQty: (json['total_returned_qty'] as num?)?.toInt(),
      returnButtonShow: (json['return_button_show'] as num?)?.toInt(),
      returnButtonContent: json['return_button_content'] as String?,
      returnLabel: json['return_label'] as String?,
    );

Map<String, dynamic> _$$ReturnableInfoImplToJson(
  _$ReturnableInfoImpl instance,
) => <String, dynamic>{
  'returnable_period': instance.returnablePeriod,
  'returnable_expired': instance.returnableExpired,
  'total_returnable_qty': instance.totalReturnableQty,
  'total_returned_qty': instance.totalReturnedQty,
  'return_button_show': instance.returnButtonShow,
  'return_button_content': instance.returnButtonContent,
  'return_label': instance.returnLabel,
};

_$VariantImpl _$$VariantImplFromJson(Map<String, dynamic> json) =>
    _$VariantImpl(
      attributes: (json['attributes'] as List<dynamic>?)
          ?.map((e) => Attribute.fromJson(e as Map<String, dynamic>))
          .toList(),
      attributeValues: json['attributeValues'] as String?,
      productId: (json['product_id'] as num?)?.toInt(),
      prodVarCode: parseInt(json['prod_var_code']),
      prodVarId: (json['prod_var_id'] as num?)?.toInt(),
      varName: json['var_name'] as String?,
      varArabicName: json['var_arabic_name'] as String?,
      varStockQty: (json['var_stock_qty'] as num?)?.toInt(),
      varTaxAmt: json['var_tax_amt'],
      varTaxInclusive: json['var_tax_inclusive'],
      varTaxPercentage: json['var_tax_percentage'],
      varTaxable: json['var_taxable'],
      variantPrice: (json['variant_price'] as num?)?.toInt(),
      varOfferPrice: (json['var_offerPrice'] as num?)?.toInt(),
      vOfferToDate: (json['v_offer_to_date'] as num?)?.toInt(),
      offerPricePercentage: json['offer_price_percentage'] as String?,
      variantImages: json['variant_images'] as List<dynamic>?,
      vAddToCart: json['v_add_to_cart'] as bool?,
      vQty: (json['v_qty'] as num?)?.toInt(),
      wCartServices: json['w_cart_services'] as List<dynamic>?,
    );

Map<String, dynamic> _$$VariantImplToJson(_$VariantImpl instance) =>
    <String, dynamic>{
      'attributes': instance.attributes,
      'attributeValues': instance.attributeValues,
      'product_id': instance.productId,
      'prod_var_code': instance.prodVarCode,
      'prod_var_id': instance.prodVarId,
      'var_name': instance.varName,
      'var_arabic_name': instance.varArabicName,
      'var_stock_qty': instance.varStockQty,
      'var_tax_amt': instance.varTaxAmt,
      'var_tax_inclusive': instance.varTaxInclusive,
      'var_tax_percentage': instance.varTaxPercentage,
      'var_taxable': instance.varTaxable,
      'variant_price': instance.variantPrice,
      'var_offerPrice': instance.varOfferPrice,
      'v_offer_to_date': instance.vOfferToDate,
      'offer_price_percentage': instance.offerPricePercentage,
      'variant_images': instance.variantImages,
      'v_add_to_cart': instance.vAddToCart,
      'v_qty': instance.vQty,
      'w_cart_services': instance.wCartServices,
    };

_$AttributeImpl _$$AttributeImplFromJson(Map<String, dynamic> json) =>
    _$AttributeImpl(
      attId: (json['att_id'] as num?)?.toInt(),
      attName: json['att_name'] as String?,
      atrValueId: (json['atr_value_id'] as num?)?.toInt(),
      attValue: json['att_value'] as String?,
      checked: (json['checked'] as num?)?.toInt(),
    );

Map<String, dynamic> _$$AttributeImplToJson(_$AttributeImpl instance) =>
    <String, dynamic>{
      'att_id': instance.attId,
      'att_name': instance.attName,
      'atr_value_id': instance.atrValueId,
      'att_value': instance.attValue,
      'checked': instance.checked,
    };

_$StoreImpl _$$StoreImplFromJson(Map<String, dynamic> json) => _$StoreImpl(
  storeName: json['store_name'] as String?,
  storeAddress: json['store_address'] as String?,
  uiDesignId: (json['ui_design_id'] as num?)?.toInt(),
  itemWiseCancel: (json['item_wise_cancel'] as num?)?.toInt(),
  itemWiseAdd: (json['item_wise_add'] as num?)?.toInt(),
);

Map<String, dynamic> _$$StoreImplToJson(_$StoreImpl instance) =>
    <String, dynamic>{
      'store_name': instance.storeName,
      'store_address': instance.storeAddress,
      'ui_design_id': instance.uiDesignId,
      'item_wise_cancel': instance.itemWiseCancel,
      'item_wise_add': instance.itemWiseAdd,
    };
